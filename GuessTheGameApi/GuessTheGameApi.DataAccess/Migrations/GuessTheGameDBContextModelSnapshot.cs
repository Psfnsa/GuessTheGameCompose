// <auto-generated />
using System;
using GuessTheGameApi.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuessTheGameApi.DataAccess.Migrations
{
    [DbContext(typeof(GuessTheGameDBContext))]
    partial class GuessTheGameDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GuessTheGameApi.Converter.Models.DataAccess.Credentials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("GuessTheGameApi.Converter.Models.DataAccess.CurrentLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Combo")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CurrentLevel");
                });

            modelBuilder.Entity("GuessTheGameApi.Converter.Models.DataAccess.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApiId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentLevelId")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentLevelId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("GuessTheGameApi.Converter.Models.DataAccess.Game", b =>
                {
                    b.HasOne("GuessTheGameApi.Converter.Models.DataAccess.CurrentLevel", null)
                        .WithMany("ListGames")
                        .HasForeignKey("CurrentLevelId");
                });

            modelBuilder.Entity("GuessTheGameApi.Converter.Models.DataAccess.CurrentLevel", b =>
                {
                    b.Navigation("ListGames");
                });
#pragma warning restore 612, 618
        }
    }
}
